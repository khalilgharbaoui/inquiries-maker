H1 Invoices

= line_chart ReceivedInquiryResponse.group_by_month(:created_at).count

table.table.table-sm.table-striped.table-hover.table-responsive.table-bordered
  thead.thead-dark
    tr
      th scope='col'
      th scope='col' Moving
      th scope='col' Cleaning
      th scope='col' Combined
      th scope='col' Total
      th scope='col' From:
      th scope='col' Until:
      th scope='col' Send Count:
      th scope='col' Fist Send:
      th scope='col' Mutation date:
      th scope='col' Opened On:
      th scope='col'
      th scope='col'
      th scope='col'
      th scope='col'
  tbody
    - @inquiries.group_by(&:quarter).reverse_each do |quarter, group|
      tr
        td #{quarter}
        /TODO: refactor this out!
        td scope='row' = count_and_subtotal(details(ReceivedInquiryResponse.kind_per_quarter(quarter, 'moving'))[0])
        td scope='row' = count_and_subtotal(details(ReceivedInquiryResponse.kind_per_quarter(quarter, 'cleaning'))[0])
        td scope='row' = count_and_subtotal(details(ReceivedInquiryResponse.kind_per_quarter(quarter, 'combined'))[0])
        td scope='row' = count_and_total(group)
        td scope='row' = until_date(group).to_s(:swiss_date_format)
        td scope='row' = from_date(group).to_s(:swiss_date_format)
        td scope='row' = invoice_send_count(group)
        td scope='row' = invoice_first_send_date(group)
        td scope='row' = invoice_mutation_date(group)
        td scope='row' = User.invoice_open_dates(quarter)
        td = link_to 'Excel', sheet_path(:xlsx, quarter: quarter, locale: nil)
        td = link_to 'PDF', invoice_path(:pdf, quarter: quarter, locale: nil)
        td = link_to 'HTML üëÅ', invoice_path(:pdf, quarter: quarter, debug: true, locale: nil)
        td = link_to 'Reschedule! üìß', reschedule_invoice_path(quarter: quarter, locale: nil), data: {confirm: 'Are you sure?'}
