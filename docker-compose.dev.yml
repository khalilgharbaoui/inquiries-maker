version: '3'
services:
  db:
    image: postgres:11-alpine
    volumes:
      - "~/web/inquiries-maker/data/:/var/lib/postgresql/data"
    # We're mounting this folder so we can backup/restore database dumps from our app folder.
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
  broker:
    image: rabbitmq:alpine
    depends_on:
      - db
  worker:
    build:
    # image: kaygeee/inquiries-maker:latest
      context: .
      dockerfile: dev.Dockerfile
      args:
        RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    command: ["bundle", "exec", "rake", "workers:run"]
    environment:
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      DATABASE_URL: ${DATABASE_URL}
      BUNDLE_PATH: /bundle/vendor
      RAILS_ENV: development
      RABBITMQ_AMQP_URI: amqp://guest:guest@broker:5672
    volumes:
      - .:/app
      - bundle_path:/bundle # New
    depends_on:
      - broker
      - db
  web:
    build:
    # image: kaygeee/inquiries-maker:latest
      context: .
      dockerfile: dev.Dockerfile
      args:
        RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    command: bundle exec rails s puma -p 3000 -b 0.0.0.0 -e development
    ports:
      # HOST:CONTAINER
      - "3000:3000"
    environment:
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      DATABASE_URL: ${DATABASE_URL}
      BUNDLE_PATH: /bundle/vendor
      RAILS_ENV: development
      RABBITMQ_AMQP_URI: amqp://guest:guest@broker:5672
    volumes:
      # HOST:CONTAINER:ro <=read only
      - .:/app
      - bundle_path:/bundle # New
      # - "~/web/inquiries-maker/certs/ssl.key:/app/config/certs/ssl.key"
      # - "~/web/inquiries-maker/certs/ssl.crt:/app/config/certs/ssl.crt"
    depends_on:
      - db
      - broker
      - worker
volumes:
  bundle_path: # New
